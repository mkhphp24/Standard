{% extends 'base.html.admin.twig' %}

{% block title %}Get Start{% endblock %}

 {% block entityName %}
     Get Start
 {% endblock %}

{% block body %}

    <main class="l-main">
        <div class="content-wrapper content-wrapper--with-bg">

            <div class="col-lg-12" >


                <h1 class="code-line" data-line-start=0 data-line-end=2><a
                            id="MajPanel__Admin_Panel__Blog_integrate__React__Symfony__0"></a>MajPanel : Admin Panel +
                    Blog integrate ( React &amp; Symfony )</h1>
                <p class="has-line-data" data-line-start="2" data-line-end="3">Symfony Powerful Dashboard &amp; Admin.
                    Developed with Symfony framework.</p>
                <p class="has-line-data" data-line-start="4" data-line-end="5">No changes were made to the symfony
                    structure, the current directory structure is used. A custom namespace for Admin has been created.
                    This field is used for all administrator operations.</p>
                <p class="has-line-data" data-line-start="6" data-line-end="7">The interface is designed to be
                    responsive using Twitter Bootstrap and limenius/react-bundle for integrate react in Twig template .
                    The least possible dependency was tried to be used.</p>
                <p class="has-line-data" data-line-start="8" data-line-end="9">you can use React and Symfony together
                    ,In Addition you can use command line for Convert Entity to API and make React Grid for manage
                    Database Tabel .</p>
                <h1 class="code-line" data-line-start=10 data-line-end=12><a id="Why_MajPanel_10"></a>Why MajPanel</h1>
                <p class="has-line-data" data-line-start="12" data-line-end="14">MajPanel Generate crud (Create, read,
                    update and delete ) DataBase Operation automatically trough Rest API and also create React Grid in
                    order to Manage your DataBase Tabel .<br>
                    you can generate automatically React Grid and API For your Entity .</p>
                <p class="has-line-data" data-line-start="16" data-line-end="17">Some Packages that were used in
                    MajPanel :</p>
                <ul>
                    <li class="has-line-data" data-line-start="17" data-line-end="18"><a
                                href="https://symfony.com/doc/current/security.html">Symfony Authentication</a></li>
                    <li class="has-line-data" data-line-start="18" data-line-end="19"><a
                                href="https://symfony.com/doc/current/validation.html">Symfony Validation</a></li>
                    <li class="has-line-data" data-line-start="19" data-line-end="20"><a
                                href="https://github.com/Limenius/symfony-react-sandbox">Symfony React Sandbox</a></li>
                    <li class="has-line-data" data-line-start="20" data-line-end="21"><a
                                href="https://devexpress.github.io/devextreme-reactive/react/grid/">React Grid</a></li>
                    <li class="has-line-data" data-line-start="21" data-line-end="22"><a
                                href="https://react-hook-form.com/">React Hook Form</a></li>
                    <li class="has-line-data" data-line-start="22" data-line-end="24"><a
                                href="https://material-ui.com/">React material-ui</a></li>
                </ul>
                <h1 class="code-line" data-line-start=24 data-line-end=26><a id="Documentation_24"></a>Documentation
                </h1>
                <ul>
                    <li class="has-line-data" data-line-start="26" data-line-end="27"><a href="#installation">Installation</a>
                    </li>
                    <li class="has-line-data" data-line-start="27" data-line-end="28"><a href="#how-to-add-new-entity-">How
                            to add new Entity</a></li>
                    <li class="has-line-data" data-line-start="28" data-line-end="29"><a
                                href="#how-to-reinstall-entity-">How to reinstall Entity</a></li>
                    <li class="has-line-data" data-line-start="29" data-line-end="30"><a href="#how-to-delete-entity-">How
                            to delete Entity</a></li>
                    <li class="has-line-data" data-line-start="30" data-line-end="31"><a href="#api-path">API PATH</a>
                    </li>
                    <li class="has-line-data" data-line-start="31" data-line-end="32"><a href="#config-entity-">Config
                            Entity</a></li>
                    <li class="has-line-data" data-line-start="32" data-line-end="33"><a
                                href="#config-symfony-validation-">Config Symfony Validation</a></li>
                    <li class="has-line-data" data-line-start="33" data-line-end="34"><a
                                href="#config-symfony-validation-">Config React Validation</a></li>
                    <li class="has-line-data" data-line-start="34" data-line-end="36"><a
                                href="#how-to-add-react-component-in-twig-">How To add React Component in Twig </a></li>
                </ul>
                <h1 class="code-line" data-line-start=36 data-line-end=38><a id="Installation__36"></a>Installation :
                </h1>
                <p class="has-line-data" data-line-start="39" data-line-end="40">Requirements: you need a recent version
                    of node, and Webpack installed (you can install it with <code>npm install -g webpack
                        webpack-dev-server</code>).</p>
                <p class="has-line-data" data-line-start="41" data-line-end="42">1- Download Package</p>
                <p class="has-line-data" data-line-start="43" data-line-end="44">2- install Package symfony &amp;
                    React</p>
                <pre><code>composer install &amp; npm install
</code></pre>
                <p class="has-line-data" data-line-start="47" data-line-end="48">3- Configure your database editing
                    <code>.env</code> and setting your database name, user and password. Then, create the schema .</p>
                <ul>
                    <li class="has-line-data" data-line-start="49" data-line-end="50">php bin/console
                        doctrine:database:create
                    </li>
                    <li class="has-line-data" data-line-start="50" data-line-end="51">php bin/console make:migration
                    </li>
                    <li class="has-line-data" data-line-start="51" data-line-end="53">php bin/console d:mig:mig</li>
                </ul>
                <p class="has-line-data" data-line-start="53" data-line-end="54">4- load fixtures:</p>
                <ul>
                    <li class="has-line-data" data-line-start="55" data-line-end="57">php bin/console
                        doctrine:fixtures:load
                    </li>
                </ul>
                <p class="has-line-data" data-line-start="57" data-line-end="58">5- run symfony server and webpack as
                    same Time in 2 Command Prompt.</p>
                <ul>
                    <li class="has-line-data" data-line-start="59" data-line-end="61"> npm run webpack-serverside </li>
                    <li class="has-line-data" data-line-start="58" data-line-end="59">symfony server:start</li>
                    <li class="has-line-data" data-line-start="59" data-line-end="61">npm run webpack-dev </li>
                </ul>
                <p class="has-line-data" data-line-start="61" data-line-end="62">After this, visit <a
                            href="http://127.0.0.1:8000">http://127.0.0.1:8000</a>.</p>
                <p class="has-line-data" data-line-start="63" data-line-end="66">6- Admin Panel :<br>
                    username : <a href="mailto:admin@example.com">admin@example.com</a><br>
                    password : 123456</p>
                <h1 class="code-line" data-line-start=70 data-line-end=72><a id="How_to_add_new_Entity__70"></a>How to
                    add new Entity :</h1>
                <p class="has-line-data" data-line-start="72" data-line-end="73">make (React Grid Tabel + API + Config
                    file + Twig Template )</p>
                <pre><code>php bin/console majpanel EntityName install
</code></pre>
                <h1 class="code-line" data-line-start=77 data-line-end=79><a id="How_to_reinstall_Entity__77"></a>How to
                    reinstall Entity :</h1>
                <p class="has-line-data" data-line-start="79" data-line-end="80">Note : remove EntityName.yaml and
                    regenerate all files again</p>
                <pre><code class="has-line-data" data-line-start="81" data-line-end="83">php bin/console majpanel EntityName reinstall
</code></pre>
                <h1 class="code-line" data-line-start=86 data-line-end=88><a id="How_to_delete_Entity__86"></a>How to
                    delete Entity :</h1>
                <pre><code class="has-line-data" data-line-start="89" data-line-end="91">php bin/console majpanel EntityName delete
</code></pre>
                <h1 class="code-line" data-line-start=93 data-line-end=95><a id="API_PATH_93"></a>API PATH</h1>
                <pre>
                    <code>
                - admin/majpanel/api/EntityName/getid/{type}/{id}/              //GET
                - admin/majpanel/api/EntityName/search/{field}/{value}          //GET
                - admin/majpanel/api/EntityName/del/                            //DEL
                - admin/majpanel/api/EntityName/update/                         //PUT
                - admin/majpanel/api/EntityName/insert/                         //POST
                - admin/majpanel/api/city/getfiles/{id}                         //GET
                - admin/majpanel/api/city/delfile/                              //POST
                </code>
                </pre>
                <h1 class="code-line" data-line-start=106 data-line-end=108><a id="How_it_works_106"></a>How it works
                </h1>
                <p class="has-line-data" data-line-start="108" data-line-end="109">These actions act as an API and will
                    be used by the client-side React code to retrieve data as needed when navigating to other pages
                    without reloading the pages.</p>
                <h1 class="code-line" data-line-start=112 data-line-end=114><a id="Config_Entity__112"></a>Config Entity
                    :</h1>
                <p class="has-line-data" data-line-start="114" data-line-end="116">Note : after change config you should
                    run install command in order to configure new files .<br>
                    Configure Entity : config/MajPanel/EntityName.yaml</p>
                <ul>
                    <li class="has-line-data" data-line-start="117" data-line-end="118">ColumnsGrid : Config React
                        Grid
                    </li>
                    <li class="has-line-data" data-line-start="118" data-line-end="119">SetFiledDetail : Config which
                        property You Want to Show in Detail Dialog Box
                    </li>
                    <li class="has-line-data" data-line-start="119" data-line-end="120">SetFiledEdit : Config which
                        property You Want to Show in Edit Dialog Box
                    </li>
                </ul>
                <h1 class="code-line" data-line-start=122 data-line-end=124><a id="Config_Symfony_Validation__122"></a>Config
                    Symfony Validation :</h1>
                <ul>
                    <li class="has-line-data" data-line-start="125" data-line-end="126">
                        src/Form/MajPanel/EntityName/EditFormValidateCity.php
                    </li>
                    <li class="has-line-data" data-line-start="126" data-line-end="127">
                        src/Form/MajPanel/EntityName/InsertFormValidateCity.php
                    </li>
                </ul>
                <h1 class="code-line" data-line-start=129 data-line-end=131><a id="Configure_React_Validation__129"></a>Configure
                    React Validation :</h1>
                <ul>
                    <li class="has-line-data" data-line-start="132" data-line-end="133">
                        assets/js/MajPanel/Grid/EntityName/Config/ConfigEditForm.jsx
                    </li>
                    <li class="has-line-data" data-line-start="133" data-line-end="134">
                        assets/js/MajPanel/Grid/EntityName/Config/ConfigInsertForm.jsx
                    </li>
                </ul>
                <h1 class="code-line" data-line-start=136 data-line-end=138><a id="Example_React_Validation_136"></a>Example
                    React Validation</h1>
                <p class="has-line-data" data-line-start="138" data-line-end="139">Configure your Validation custom
                    ConfigEditForm.jsx &amp; ConfigInsertForm.jsx</p>
                <pre><code class="has-line-data" data-line-start="140" data-line-end="160">    export const ValidateFields={

                    &quot;email&quot; :
                        {
                            required: &quot;Enter your e-mail&quot;,
                            pattern: {
                              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i,
                              message: &quot;Enter a valid e-mail address&quot;,
                            },
                        } ,
                    &quot;postcode&quot; :
                        {
                            required: &quot;Postcode required&quot; ,
                            pattern: {
                              value: /[0-9]{10}/,
                              message: &quot;Enter number Postcode &quot;,
                            },
                        }
    };
</code></pre>
                <h1 class="code-line" data-line-start=162 data-line-end=164><a
                            id="How_To_add_React_Component_in_Twig__162"></a>How To add React Component in Twig :</h1>
                <p class="has-line-data" data-line-start="165" data-line-end="166">Take a look at the
                    assets/js/entryPoint.js file:</p>
                <p class="has-line-data" data-line-start="167" data-line-end="168">First of all you should register your
                    Component :</p>
                <pre><code class="has-line-data" data-line-start="171" data-line-end="173">
</code></pre>
                <h1 class="code-line" data-line-start=173 data-line-end=175><a id="Configure_React_BASEURL__173"></a>Configure
                    React BASE-URL :</h1>
                <ul>
                    <li class="has-line-data" data-line-start="176" data-line-end="178">
                        assets/js/MajPanel/Config/init.jsx
                    </li>
                </ul>
                <h1 class="code-line" data-line-start=178 data-line-end=180><a id="Blog_example_178"></a>Blog example
                </h1>
                <p class="has-line-data" data-line-start="180" data-line-end="181">this future an example for manage a
                    blog</p>


            </div>

        </div>
    </main>


{% endblock %}

{% block javascripts %}
    {{ parent() }}

{% endblock %}